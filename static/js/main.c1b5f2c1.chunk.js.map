{"version":3,"sources":["logo.svg","Item.js","Status.js","Bottom.js","App.js","reportWebVitals.js","index.js"],"names":["Item","props","handleCheckClick","a","setState","isCompleted","state","console","log","item","addToCompleteList","deleteFromCompleteList","this","statusChoice","textAreaRef","style","height","scrollHeight","display","renderActivityDisplay","id","key","className","draggable","onDragStart","e","handleDragStart","onDragOver","handleDragOver","onDrop","handleDrop","type","onClick","rows","value","text","ref","textDecoration","onChange","setUpdate","target","icon","deleteItem","Component","Status","name","handleClick","color","Bottom","handleClear","deleteCompleteItem","handleAll","selectStatusChoice","handleActive","handleComplete","totalItem","completeItem","renderNumberOfItemsLeft","library","add","faTrash","faPlus","App","handleInput","currentItem","Date","now","addItem","preventDefault","newitem","newItems","items","filtereditems","filter","filteredCompleteitems","completeList","newList","forEach","citem","index","findIndex","splice","map","selectedChoice","completedListToBeUpdated","indexOfCompletedActivity","i","dataTransfer","setData","activityToBeDropped","getData","activityToBeDroppedIndex","parseInt","indexToBeDroppedAt","listToBeUpdated","removed","onSubmit","placeholder","renderList","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1b5f2c1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\nimport './Item.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Item extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isCompleted: false\r\n    }\r\n  }\r\n\r\n  handleCheckClick = async () => {\r\n    await this.setState({ isCompleted: !this.state.isCompleted });\r\n\r\n    console.log(\"handle\");\r\n    console.log(this.props.item, this.state.isCompleted);\r\n    if (this.state.isCompleted) {\r\n      this.props.addToCompleteList(this.props.item)\r\n    } else {\r\n      this.props.deleteFromCompleteList(this.props.item)\r\n    }\r\n  }\r\n\r\n  renderActivityDisplay() {\r\n    if (this.props.statusChoice === \"Complete\") {\r\n      if (!this.state.isCompleted) {\r\n        return \"none\";\r\n      }\r\n      else {\r\n        return \"\";\r\n      }\r\n    }\r\n    else if (this.props.statusChoice === \"Active\") {\r\n      if (this.state.isCompleted) {\r\n        return \"none\";\r\n      }\r\n      else {\r\n        return \"\";\r\n      }\r\n    }\r\n    else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.textAreaRef.style.height = \"inherit\";\r\n    this.textAreaRef.style.height = this.textAreaRef.scrollHeight + \"px\";\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.textAreaRef.style.height = \"inherit\";\r\n    this.textAreaRef.style.height = this.textAreaRef.scrollHeight + \"px\";\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.item, this.state.isCompleted);\r\n    return (\r\n      <div style={{ display: `${this.renderActivityDisplay()}` }}\r\n        id={this.props.item.key}\r\n        key={this.props.item.key}\r\n        className=\"maindiv\"\r\n        draggable\r\n        onDragStart={(e) => this.props.handleDragStart(e)}\r\n        onDragOver={(e) => this.props.handleDragOver(e)}\r\n        onDrop={(e) => this.props.handleDrop(e)}>\r\n        <div className=\"list\" id={this.props.item.key}>\r\n          <div id={this.props.item.key} type=\"button\" onClick={this.handleCheckClick} className=\"circle\">\r\n            <div className=\"innerCircle\"\r\n              style={{ display: this.state.isCompleted ? \"\" : \"none\" }}></div>\r\n          </div>\r\n          <textarea\r\n            rows=\"1\"\r\n            id={this.props.item.key}\r\n            value={this.props.item.text}\r\n            ref={textAreaRef => this.textAreaRef = textAreaRef}\r\n            style={{ textDecoration: this.state.isCompleted ? \"line-through\" : \"\" }}\r\n            onChange={(e) => { this.props.setUpdate(e.target.value, this.props.item.key) }} />\r\n          <span id={this.props.item.key}>\r\n            <FontAwesomeIcon\r\n              className=\"bin\"\r\n              icon='trash'\r\n              onClick={() => this.props.deleteItem(this.props.item.key)}>\r\n            </FontAwesomeIcon>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Item;","import React,{Component} from \"react\";\r\n\r\nclass Status extends Component{\r\n    // constructor\r\n    render(){\r\n        console.log(this.props.statusChoice,this.props.name)\r\n    return(\r\n        <span onClick={this.props.handleClick}  style={{color: this.props.statusChoice === this.props.name ? \"#fff\" : \"#c77dff\"}}>\r\n            {this.props.name}\r\n        </span>\r\n    );\r\n    }\r\n}\r\n\r\nexport default Status;","import React , {Component} from 'react';\r\nimport Status from './Status';\r\nimport './Bottom.css';\r\n\r\nclass Bottom extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    \r\n    handleClear= () => {\r\n        this.props.deleteCompleteItem();\r\n    }\r\n\r\n    renderNumberOfItemsLeft(){\r\n        return(this.props.totalItem - this.props.completeItem)\r\n    }\r\n\r\n    handleAll = () => {\r\n        this.props.selectStatusChoice(\"All\");\r\n    }\r\n\r\n    handleActive = () => {\r\n        this.props.selectStatusChoice(\"Active\");\r\n    }\r\n\r\n    handleComplete = () => {\r\n        this.props.selectStatusChoice(\"Complete\");\r\n    }\r\n\r\n    render(){\r\n    return(\r\n        <div className=\"bottom\">\r\n            <span className=\"left\">{this.renderNumberOfItemsLeft()} {this.renderNumberOfItemsLeft() === 1 ? \"item\" : \"items\"}  left</span>\r\n            <div className=\"status\">\r\n                <div>\r\n                <Status statusChoice={this.props.statusChoice} name=\"All\" handleClick={this.handleAll}/>\r\n                </div>\r\n                <div>\r\n                <Status statusChoice={this.props.statusChoice} name=\"Active\" handleClick={this.handleActive}/>\r\n                </div>\r\n                <div>\r\n                <Status statusChoice={this.props.statusChoice} name=\"Complete\" handleClick={this.handleComplete}/>\r\n                </div>\r\n            </div>\r\n            <span className=\"complete\" onClick={this.handleClear}>Clear Completed</span>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default Bottom;","import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react';\nimport Item from './Item';\nimport Bottom from './Bottom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { library, text } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash, faPlus } from '@fortawesome/free-solid-svg-icons'\nimport FlipMove from 'react-flip-move';\n\nlibrary.add(faTrash, faPlus);\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      items: [],\n      completeList: [],\n      statusChoice: \"All\",\n      currentItem: {\n        text: \"\",\n        key: \"\"\n      }\n    }\n  }\n\n  handleInput = (e) => {\n    e.target.style.height = \"inherit\";\n    e.target.style.height = `${e.target.scrollHeight}px`;\n    this.setState({\n      currentItem: {\n        text: e.target.value,\n        key: Date.now()\n      }\n    })\n  }\n\n  // Add Entries\n  addItem = (e) => {\n    this.text.style.height = \"inherit\";\n    e.preventDefault();\n    const newitem = this.state.currentItem;\n    console.log(newitem);\n    if (newitem.text !== \"\") {\n      const newItems = [...this.state.items, newitem];\n      this.setState({\n        items: newItems,\n        currentItem: {\n          text: '',\n          key: ''\n        }\n      });\n    }\n  }\n\n  // Delete entries\n  deleteItem = (key) => {\n    const filtereditems = this.state.items.filter(item => item.key !== key);\n    const filteredCompleteitems = this.state.completeList.filter(item => item.key !== key);\n    this.setState({\n      items: filtereditems,\n      completeList: filteredCompleteitems\n    })\n  }\n\n  // Delete all completed items\n  deleteCompleteItem = () => {\n    const newList = [...this.state.items];\n    this.state.completeList.forEach(citem => {\n      const index = newList.findIndex(item => item.key === citem.key)\n      console.log(\"index\" + index);\n      newList.splice(index, 1);\n    })\n    this.setState({\n      items: newList,\n      completeList: []\n    })\n  }\n\n  // Update Entries\n  setUpdate = (text, key) => {\n    const items = this.state.items;\n    items.map(item => {\n      if (item.key === key) {\n        item.text = text;\n      }\n    })\n    this.setState({\n      items: items\n    })\n  }\n\n  // All active Completed ?????\n  selectStatusChoice = (selectedChoice) => {\n    this.setState({\n      statusChoice: selectedChoice\n    })\n  }\n\n  addToCompleteList = (item) => {\n    const completeList = [...this.state.completeList, item];\n    this.setState({\n      completeList: completeList\n    })\n    console.log(completeList);\n  }\n\n  deleteFromCompleteList = (item) => {\n    const completedListToBeUpdated = [...this.state.completeList]\n    const indexOfCompletedActivity = this.state.completeList.findIndex(i => i.key === item.key)\n    completedListToBeUpdated.splice(indexOfCompletedActivity, 1)\n\n    this.setState({ completeList: completedListToBeUpdated })\n  }\n\n  handleDragStart = (e) => {\n    e.dataTransfer.setData(\"activity_id\", e.target.id)\n  }\n\n  handleDragOver = (e) => {\n    e.preventDefault();\n  }\n\n  handleDrop = (e) => {\n    //get the key of activity to be dropped using the e.dataTransfer.getData(key) function\n    const activityToBeDropped = e.dataTransfer.getData(\"activity_id\")\n\n    //find index of that activity in the current activity list\n    const activityToBeDroppedIndex = this.state.items.findIndex(item => item.key === parseInt(activityToBeDropped))\n\n    //index of activity where we wnat to drop\n    const indexToBeDroppedAt = this.state.items.findIndex(item => item.key === parseInt(e.target.id))\n\n    //copy main array in temp variable\n    const listToBeUpdated = [...this.state.items]\n\n    // remove activity we want change place of\n    const removed = listToBeUpdated.splice(activityToBeDroppedIndex, 1)\n\n    //And then add that activity to the desired index in the activity list\n    listToBeUpdated.splice(indexToBeDroppedAt, 0, removed[0])\n\n    this.setState({ items: listToBeUpdated })\n  }\n\n  renderList() {\n    return this.state.items.map((item) => {\n      return (\n        <Item\n          key={item.key}\n          item={item}\n          deleteItem={this.deleteItem}\n          setUpdate={this.setUpdate}\n          statusChoice={this.state.statusChoice}\n          addToCompleteList={this.addToCompleteList}\n          deleteFromCompleteList={this.deleteFromCompleteList}\n          handleDragStart={this.handleDragStart}\n          handleDragOver={this.handleDragOver}\n          handleDrop={this.handleDrop}\n        />\n      )\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>TO DO</h1>\n        <header>\n          <form id=\"to-do-form\" onSubmit={this.addItem}>\n            <textarea rows=\"1\" placeholder=\"Enter Text\"\n              value={this.state.currentItem.text}\n              onChange={this.handleInput}\n              ref={text => this.text = text} />\n            <button type=\"submit\"><FontAwesomeIcon className=\"faicons\" icon='plus'></FontAwesomeIcon></button>\n          </form>\n        </header>\n\n        <div className=\"activity-list\">\n          {this.renderList()}\n        </div>\n\n        <Bottom\n          statusChoice={this.state.statusChoice}\n          selectStatusChoice={this.selectStatusChoice}\n          totalItem={this.state.items.length}\n          completeItem={this.state.completeList.length}\n          deleteCompleteItem={this.deleteCompleteItem} />\n        <p className=\"last\">Drag and Drop to reorder List</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}